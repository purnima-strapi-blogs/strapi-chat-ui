[{"/home/purnima/learning/blogs/blogi-ui/src/index.js":"1","/home/purnima/learning/blogs/blogi-ui/src/App.js":"2","/home/purnima/learning/blogs/blogi-ui/src/reportWebVitals.js":"3","/home/purnima/learning/blogs/blogi-ui/src/config/network.js":"4","/home/purnima/learning/blogs/blogi-ui/src/config/web-sockets.js":"5","/home/purnima/learning/blogs/blogi-ui/src/components/List/index.js":"6","/home/purnima/learning/blogs/blogi-ui/src/components/Header/index.js":"7","/home/purnima/learning/blogs/blogi-ui/src/components/Messages/index.js":"8","/home/purnima/learning/blogs/blogi-ui/src/components/Messages/Message/index.js":"9","/home/purnima/learning/blogs/blogi-ui/src/components/Messages/Message/styles.js":"10","/home/purnima/learning/blogs/blogi-ui/src/screens/ChatRoom/index.js":"11","/home/purnima/learning/blogs/blogi-ui/src/screens/ChatRoom/styles.js":"12","/home/purnima/learning/blogs/blogi-ui/src/screens/JoinRoom/index.js":"13"},{"size":772,"mtime":1610019427076,"results":"14","hashOfConfig":"15"},{"size":1398,"mtime":1608732810658,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1608451507725,"results":"17","hashOfConfig":"15"},{"size":93,"mtime":1608632165089,"results":"18","hashOfConfig":"15"},{"size":258,"mtime":1610183684880,"results":"19","hashOfConfig":"15"},{"size":1181,"mtime":1608733461956,"results":"20","hashOfConfig":"15"},{"size":1258,"mtime":1609859984860,"results":"21","hashOfConfig":"15"},{"size":822,"mtime":1608732493239,"results":"22","hashOfConfig":"15"},{"size":934,"mtime":1609860138240,"results":"23","hashOfConfig":"15"},{"size":920,"mtime":1609860095289,"results":"24","hashOfConfig":"15"},{"size":2549,"mtime":1609928660764,"results":"25","hashOfConfig":"15"},{"size":935,"mtime":1609924357537,"results":"26","hashOfConfig":"15"},{"size":2207,"mtime":1610026858125,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1dpkppt",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},"/home/purnima/learning/blogs/blogi-ui/src/index.js",[],["56","57"],"/home/purnima/learning/blogs/blogi-ui/src/App.js",[],"/home/purnima/learning/blogs/blogi-ui/src/reportWebVitals.js",[],"/home/purnima/learning/blogs/blogi-ui/src/config/network.js",[],"/home/purnima/learning/blogs/blogi-ui/src/config/web-sockets.js",[],"/home/purnima/learning/blogs/blogi-ui/src/components/List/index.js",[],"/home/purnima/learning/blogs/blogi-ui/src/components/Header/index.js",[],"/home/purnima/learning/blogs/blogi-ui/src/components/Messages/index.js",[],"/home/purnima/learning/blogs/blogi-ui/src/components/Messages/Message/index.js",[],"/home/purnima/learning/blogs/blogi-ui/src/components/Messages/Message/styles.js",[],"/home/purnima/learning/blogs/blogi-ui/src/screens/ChatRoom/index.js",[],"/home/purnima/learning/blogs/blogi-ui/src/screens/ChatRoom/styles.js",[],"/home/purnima/learning/blogs/blogi-ui/src/screens/JoinRoom/index.js",["58"],"import React, { useState, useEffect } from \"react\";\nimport styled from 'styled-components';\nimport { Input, Card, Button} from 'antd';\nimport { socket } from '../../config/web-sockets';\n\nfunction JoinRoom(props) {\n    const [username, setUsername] = useState('');\n    const [room, setRoom] = useState('');\n    const [error, setError] = useState('');\n\n    const onUsernameChange = (e) => {\n        const inputValue = e.target.value;\n        setUsername(inputValue);\n        \n    }\n    const onRoomChange = (e) => {\n        const roomNo = e.target.value;\n        setRoom(roomNo);\n    }\n\n    useEffect(() => {\n        socket.on('welcome', (data) => {\n            props.onJoinSuccess(data);\n        });\n    }, [props])\n    \n\n    const onClick = () => {\n        if(username && room) {\n            socket.emit('join', { username, room }, (error) => {\n                if(error) {\n                    setError(error)\n                    alert(error);\n                }\n            }); \n        }\n    }\n  \n    return (\n        <StyledCard>\n            <label htmlFor=\"username\">\n                Enter your name\n                <Input\n                    name=\"username\"\n                    placeholder=\"Enter your username\"\n                    maxLength={25}\n                    value={username}\n                    onChange={onUsernameChange}\n                />\n            </label>\n            <label htmlFor=\"room\">\n                Enter room number of your choice\n                <Input\n                    name=\"room\"\n                    placeholder=\"Enter your room number\"\n                    maxLength={25}\n                    value={room}\n                    onChange={onRoomChange}\n                />\n            </label>\n            <StyledButton \n                type=\"primary\" \n                size={\"large\"}\n                onClick={onClick}\n            >\n                Join the Chat Room\n            </StyledButton>\n        </StyledCard>\n    )\n};\n \nexport default JoinRoom;\n \nconst StyledCard = styled(Card)`\n    width: 581px;\n    height: 210px;\n    margin: 30vh auto;\n    box-shadow: 2px 3px 3px 2.8px #d7d7e4;\n    text-align: center;\n`\nconst StyledButton = styled(Button)`\n    margin-top: 10px;\n`\n",{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":9,"column":12,"nodeType":"65","messageId":"66","endLine":9,"endColumn":17},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]